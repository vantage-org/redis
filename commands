#!/usr/bin/env bash
shopt -s nullglob

function count_redis_containers() {
    echo $(docker ps -a | grep vg_redis | wc -l)
}

function random_string() {
    echo $(cat /dev/urandom | tr -dc 'a-z' | fold -w 16 | head -n 1)
}

case "$1" in
    new)
        if [ -z "$2" ]; then
            name=vg_redis_$(count_redis_containers)
        else
            name="$2"
        fi
        password=$(random_string)
        docker run \
            --detach \
            --publish-all \
            --name $name \
            redis redis-server --requirepass "$password" \
            &> /dev/null
        port=$(docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' $name)
        echo redis://h:$password@localhost:$port
        exit $VG_VALID_EXIT
        ;;
    rm)
        docker stop $(docker ps | grep vg_redis | cut  -d' ' -f1) &> /dev/null
        docker rm $(docker ps -a | grep vg_redis | cut  -d' ' -f1) &> /dev/null
        exit $VG_VALID_EXIT
        ;;
    shell)
        if [ -z "$2" ]; then
            source $VG_ENV_FILE
        else
            REDIS_URL="$2"
        fi
        proto="`echo $REDIS_URL | grep '://' | sed -e's,^\(.*://\).*,\1,g'`"
        url=`echo $REDIS_URL | sed -e s,$proto,,g`
        userpass="`echo $url | grep @ | cut -d@ -f1`"
        pass=`echo $userpass | grep : | cut -d: -f2`
        if [ -n "$pass" ]; then
            user=`echo $userpass | grep : | cut -d: -f1`
        else
            user=$userpass
        fi
        hostport=`echo $url | sed -e s,$userpass@,,g | cut -d/ -f1`
        port=`echo $hostport | grep : | cut -d: -f2`
        if [ -n "$port" ]; then
            host=`echo $hostport | grep : | cut -d: -f1`
        else
            host=$hostport
        fi
        docker run \
            --interactive \
            --tty \
            --net=host \
            --name=vg_redis_shell \
            redis redis-cli -h "$host" -p "$port" -a "$pass"
        docker stop vg_redis_shell &> /dev/null
        docker rm vg_redis_shell &> /dev/null
        exit $VG_VALID_EXIT
        ;;
    help)
        echo "    redis new - Create a new, redis container"
        echo "    redis rm - Stop and remove *all* redis containers"
        echo "    redis shell [REDIS_URL] - Open redis-cli pointed at REDIS_URL"
        ;;
    *)
        exit $VG_NOT_IMPLEMENTED_EXIT
        ;;
esac